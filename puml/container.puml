
@startuml

!$ICONURL = "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons"
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v20.0/dist
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include $ICONURL/common.puml
!include $ICONURL/devicons2/supabase.puml
!include AWSPuml/AWSCommon.puml
!include AWSPuml/Storage/SimpleStorageService.puml
!include AWSPuml/Compute/Lambda.puml

LAYOUT_WITH_LEGEND()

Person(client, "Client", "Inputs financial data")
Person(advisor, "Advisor", "Manages clients")

System_Boundary(cep, "CEP Platform") {
    Container(client_fe, "Client Frontend", "Typescript, React", "Web pages generated for clients. Capture client data.")
    Container(advisor_fe, "Advisor Frontend", "Typescript, React", "Web pages generated for financial advisors. Manage clients.")
    Container(backend, "Backend", "Typescript, Node, NextJS", "Renders web-pages (SSR), expose basic CRUD APIs")
}

Enterprise_Boundary(supa, "Supabase") {
    ContainerDb(supa_db, "Database", "PostgreSQL", $sprite="supabase")
    Container_Ext(supa_bucket, "Bucket", $sprite="supabase")
}

Enterprise_Boundary(aws, "AWS") {
    Container_Ext(aws_s3, "S3", "User images", $sprite="SimpleStorageService") 
    Container(aws_resizer, "Image processor", "Javascript", "Resize images", $sprite="Lambda") 
    Container(aws_emailer, "Emailer", "Javascript", "Structure and send emails to funds", $sprite="Lambda") 
}

Rel(client, client_fe, "Uses")
Rel(advisor, advisor_fe, "Uses")
Rel(client_fe, backend, "SSR, API calls")
Rel(advisor_fe, backend, "SSR, API calls")
Rel(client_fe, aws_s3, "Upload via signed URL")
Rel(advisor_fe, aws_s3, "Upload via signed URLs")
Rel(aws_s3, aws_resizer, "Trigger on PUT")
Rel(aws_resizer, supa_bucket, "Service Upload")
Rel(backend, supa_db, "CRUD queries & User authentication")
Rel(backend, aws_emailer, "Trigger email process")

@enduml
